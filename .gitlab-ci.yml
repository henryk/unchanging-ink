.docker-login:
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

.ssh-agent:
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - \[ -z "$SSH_PRIVATE_KEY" ] || (echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -)
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod -R go= ~/.ssh

default:
  before_script:
    - !reference [.docker-login, before_script]
    - !reference [.ssh-agent, before_script]
  image: docker:latest
  tags:
    - shell
  services:
    - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1

stages:
  - build
  - test
  - push
  - deploy

build main backend:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/backend" --target backend .
  only:
    - main

build main worker:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/worker" --target worker .
  only:
    - main

build main frontend:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/frontend" --target frontend .
  only:
    - main

push main all:
  stage: push
  script:
    - docker push "$CI_REGISTRY_IMAGE/backend"
    - docker push "$CI_REGISTRY_IMAGE/worker"
    - docker push "$CI_REGISTRY_IMAGE/frontend"
  only:
    - main

deploy dev:
  environment: dev
  stage: deploy
  image: cytopia/ansible:latest-tools
  tags:
    - docker
  before_script:
    - !reference [.ssh-agent, before_script]
  script:
    - cd deployment && ansible-playbook -i "${DEPLOY_HOST}," deploy.yml
  only:
    - dev

build other all:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG" --target backend .
    - docker build --pull -t "$CI_REGISTRY_IMAGE/worker:$CI_COMMIT_REF_SLUG" --target worker .
    - docker build --pull -t "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG" --target frontend .
    - docker push "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE/worker:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG"
  except:
    - main

test other all:
  stage: test
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/tester:$CI_COMMIT_REF_SLUG" --target tester .
    - docker run --rm -v $$PWD:/output "$CI_REGISTRY_IMAGE/tester:$CI_COMMIT_REF_SLUG" --cov-report xml:/output/coverage-$CI_JOB_ID.xml
  except:
    - main
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage-$CI_JOB_ID.xml

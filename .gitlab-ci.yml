default:
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - \[ -z "$SSH_PRIVATE_KEY" ] || (echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -)
    - mkdir -p ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod -R go= ~/.ssh
  image: docker:latest
  services:
    - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1

stages:
  - build
  - push
  - deploy

build main backend:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/backend" --target backend .
  only:
    - main

build main worker:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/worker" --target worker .
  only:
    - main

build main frontend:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/frontend" --target frontend .
  only:
    - main

push main all:
  stage: push
  script:
    - docker push "$CI_REGISTRY_IMAGE/backend"
    - docker push "$CI_REGISTRY_IMAGE/worker"
    - docker push "$CI_REGISTRY_IMAGE/frontend"
  only:
    - main

deploy dev:
  environment: dev
  stage: deploy
  script:
    - ssh -A $DEPLOY_USER@$DEPLOY_HOST -p $DEPLOY_PORT "mkdir -p ~/.ssh; grep git.wolff.holdings .ssh/known_hosts 2> /dev/null > /dev/null || echo '$SSH_KNOWN_HOSTS' >> ~/.ssh/known_hosts; chmod -R go= ~/.ssh"
    - ssh -A $DEPLOY_USER@$DEPLOY_HOST -p $DEPLOY_PORT "python3 -m pip -- install pip setuptools; export PATH=~/.local/bin:$$PATH; pip3 install -U docker-compose"
    - ssh -A $DEPLOY_USER@$DEPLOY_HOST -p $DEPLOY_PORT "( [ -d '$CI_PROJECT_NAME' ] || git clone -n --recurse-submodules -b '$CI_COMMIT_REF_NAME' 'ssh://git@git.wolff.holdings:2222/${CI_PROJECT_PATH}.git' ) && cd '$CI_PROJECT_NAME' && git fetch origin $CI_COMMIT_SHA && git checkout --theirs $CI_COMMIT_SHA -- docker-compose.yml .env default.conf"
    - ssh -A $DEPLOY_USER@$DEPLOY_HOST -p $DEPLOY_PORT "export PATH=~/.local/bin:\\$PATH && docker login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' $CI_REGISTRY && cd '${CI_PROJECT_NAME}' && echo 'DEPLOY_VERSION=$CI_COMMIT_REF_SLUG' > .env.local && echo 'IMAGE_BASE=$CI_REGISTRY_IMAGE' >> .env.local && echo 'PROXYPORT=23230' >> .env.local && bash -l -c 'docker-compose --env-file=.env.local pull && docker-compose --env-file=.env.local up --no-build -d'"
  only:
    - dev

build other all:
  stage: build
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG" --target backend .
    - docker push "$CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/worker:$CI_COMMIT_REF_SLUG" --target worker .
    - docker push "$CI_REGISTRY_IMAGE/worker:$CI_COMMIT_REF_SLUG"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG" --target frontend .
    - docker push "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG"
  except:
    - main

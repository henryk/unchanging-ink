version: '3.4'

services:
  db:
    image: "postgres:14"
    restart: always
    read_only: true
    volumes:
      - db-data:/var/lib/postgresql/data
    tmpfs:
      - /tmp
      - /run
    environment:
      POSTGRES_USER: "sanic"
      POSTGRES_PASSWORD: "toomanysecrets"
      POSTGRES_DB: "sanic"
    command: ["postgres", "-c", "shared_buffers=1GB", "-c", "max_connections=1024"]
    networks:
      - db

  backend:
    image: ${IMAGE_BASE}/backend:${DEPLOY_VERSION}
    build: .
    read_only: true
    restart: always
    environment:
      SANIC_DB_HOST: db
      SANIC_DB_USER: sanic
      SANIC_DB_PASSWORD: toomanysecrets
      SANIC_DB_NAME: sanic
      SANIC_AUTHORITY: dev.unchanging.ink
      PYTHONUNBUFFERED: 1
    depends_on:
      - db
      - redis
    networks:
      - db
      - web
      - redis

  worker:
    image: ${IMAGE_BASE}/worker:${DEPLOY_VERSION}
    restart: always
    build:
      context: .
      target: worker
    read_only: true
    environment:
      SANIC_DEBUG: $DEBUG
      SANIC_DB_HOST: db
      SANIC_DB_USER: sanic
      SANIC_DB_PASSWORD: toomanysecrets
      SANIC_DB_NAME: sanic
    depends_on:
      - db
      - redis
    networks:
      - db
      - redis

  frontend:
    image: ${IMAGE_BASE}/frontend:${DEPLOY_VERSION}
    restart: always
    build:
      context: .
      target: frontend
    environment:
      HOST: "0"
      PORT: "3000"
      AUTHORITY: "dev.unchanging.ink"
    read_only: true
    depends_on:
      - redis
    networks:
      - web
      - redis

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - ./redis.conf:/etc/redis.conf:ro
    command:
      - /etc/redis.conf
    networks:
      - redis
    read_only: true
    tmpfs:
      - /tmp
      - /run

  proxy:
    image: fholzer/nginx-brotli
    ports:
      - "127.0.0.1:$PROXYPORT:80"
    restart: always
    depends_on:
      - backend
      - frontend
    networks:
      - web
      - default
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    read_only: true
    tmpfs:
      - /tmp
      - /run
      - /var/cache/nginx

networks:
  db:
    driver: bridge
    internal: true
  web:
    driver: bridge
    internal: true
  redis:
    driver: bridge
    internal: true
  default:

volumes:
  db-data:

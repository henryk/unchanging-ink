import datetime

import dateutil.parser

from unchanging_ink.schemas import TimestampRequest, TimestampStructure


def test_parse_timestamp_request_cbor():
    request = TimestampRequest.from_cbor(
        bytes.fromhex(
            "A1646461746178877368613531323A6366383365313335376565666238626466313534323835306436366438303037643632306534303530623537313564633833663461393231643336636539636534376430643133633564383566326230666638333138643238373765656332663633623933316264343734313761383161353338333237616639323764613365"
        )
    )
    assert (
        request.data
        == "sha512:cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e"
    )
    assert request.options == ["wait"]


def test_serialize_timestamp_structure():
    ts = TimestampStructure(
        "sha512:cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e",
        dateutil.parser.isoparse("2021-04-05T23:39:42.944682Z"),
    )
    assert ts.to_cbor() == bytes.fromhex(
        "A463747970627473646461746178877368613531323A63663833653133353765656662386264663135343238353064363664383030376436323065343035306235373135646338336634613932316433366365396365343764306431336335643835663262306666383331386432383737656563326636336239333162643437343137613831613533383332376166393237646133656776657273696F6E61316974696D657374616D70C0781B323032312D30342D30355432333A33393A34322E3934343638325A"
    )


def test_roundtrip_timestamp_structure():
    ts1 = TimestampStructure(
        "bla", dateutil.parser.isoparse("2021-04-05T23:39:42.944682Z")
    )
    ts1_encoded = ts1.to_cbor()
    ts2 = TimestampStructure.from_cbor(ts1_encoded)
    assert ts2.timestamp.tzinfo == datetime.timezone.utc
    assert ts2 == ts1
    ts2_encoded = ts2.to_cbor()
    assert ts1_encoded == ts2_encoded
